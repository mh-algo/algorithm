n=int(input())
k=int(input())

def search():
	start,end=1,k
	ret=0
	while start<=end:
		mid=(start+end)//2
		tmp=0
		for i in range(1,n+1):
			tmp+=min(mid//i,n)    # i행에서 mid보다 작은 수의 개수는 mid//i 이다.
		if tmp>=k:
			ret=mid
			end=mid-1
		else:
			start=mid+1
	return ret

print(search())



'''
n=7, k=17인 경우를 알아보자

n=7일 경우의 배열은 아래와 같다

     1  2  3  4  5  6  7
   ______________________
1 │  1  2  3  4  5  6  7 
2 │  2  4  6  8  10 12 14 
3 │  3  6  9  12 15 18 21 
4 │  4  8  12 16 20 24 28 
5 │  5  10 15 20 25 30 35 
6 │  6  12 18 24 30 36 42 
7 │  7  14 21 28 35 42 49 



i=7일 경우 배열에서 i보다 작은 숫자의 개수는 다음과 같다

     1  2  3  4  5  6  7
   ______________________
1 │  1  2  3  4  5  6  7      7 // 1 = 7개
2 │  2  4  6                  7 // 2 = 3개
3 │  3  6                     7 // 3 = 2개
4 │  4                        7 // 4 = 1개
5 │  5                        7 // 5 = 1개
6 │  6                        7 // 6 = 1개
7 │  7                        7 // 7 = 1개

                              총 개수: 16개



i=8일 경우 배열에서 i보다 작은 숫자의 개수는 다음과 같다

     1  2  3  4  5  6  7
   ______________________
1 │  1  2  3  4  5  6  7      8 // 1 = 8 -> 하지만 한 행에 최대 n개 까지 가능하기 때문에 7개
2 │  2  4  6  8               8 // 2 = 4개
3 │  3  6                     8 // 3 = 2개
4 │  4  8                     8 // 4 = 2개
5 │  5                        8 // 5 = 1개
6 │  6                        8 // 6 = 1개
7 │  7                        8 // 7 = 1개

                              총 개수: 18개

따라서 k=17인 경우에 답은 8이 나온다.
'''
